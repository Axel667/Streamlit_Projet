import streamlit as st
from app import render_datasets_page
from benchmark import render_benchmarks_page
from actu import render_actu_page  # Nouvel import

def render_accueil_page():
    st.markdown("<h1 style='text-align: center; color: #FFD700;'>Bienvenue sur HuggingFace Explorer</h1>", unsafe_allow_html=True)
    
    st.markdown("<h3 style='text-align: center; color: #FFD700;'>Contexte du Projet</h3>", unsafe_allow_html=True)

    st.markdown("""
    Ce projet est en lien avec notre projet IA de finetuning de LLM que nous r√©aliserons au second semestre. Cette app permet d'explorer les mod√®les open source, leurs architectures mais aussi de comparer leurs performances et de se documenter facilement √† l'aide d'articles. 
    """)

    st.markdown("<h3 style='text-align: center; color: #FFD700;'>Fonctionnalit√©s</h3>", unsafe_allow_html=True)

    # Contenu de la page d'accueil
    st.markdown("""
    - **Catalogue des Mod√®les** : Explorez les mod√®les Hugging Face disponibles, leurs t√©l√©chargements, ainsi que leurs tendances de popularit√© au fil du temps.
    - **Benchmarks** : Comparez les performances des mod√®les sur diff√©rentes m√©triques et visualisez l'impact environnemental (co√ªt CO‚ÇÇ) des diff√©rentes architectures.
    - **Actualit√©s** : Consultez les articles r√©cents sur les LLM, filtrez-les par pays, p√©riode ou score de sentiment, et obtenez une vue d'ensemble des tendances g√©ographiques et temporelles.
    """)

    st.markdown("<h3 style='text-align: center; color: #FFD700;'>Utilit√© du Projet</h3>", unsafe_allow_html=True)

    st.markdown("""
    Cette application permet de se documenter sur les mod√®les de langage open source et leurs performances, en vue de notre projet IA du second semestre mais aussi :
    - D'identifier les mod√®les les plus adapt√©s pour notre projet de fine-tuning en fonction de leurs benchmarks.
    - De suivre les tendances actuelles dans le domaine des LLM.
    - De choisir une architecture adapt√©e avec nos objectifs.
    """)

def main():
    # Initialisation de session_state
    if "active_page" not in st.session_state:
        st.session_state["active_page"] = "üè† Accueil"

    # Style de la sidebar
    st.markdown("""
        <style>
        .sidebar-nav {
            padding: 10px;
            border-radius: 10px;
            background-color: #262730;
        }
        .nav-button {
            width: 100%;
            padding: 10px;
            margin: 5px 0;
            border: 2px solid #FFD700;
            border-radius: 5px;
            background-color: transparent;
            color: #FFD700;
            transition: all 0.3s;
        }
        .nav-button:hover, .nav-button.active {
            background-color: #FFD700;
            color: #262730;
        }
        </style>
    """, unsafe_allow_html=True)

    # Logo et titre dans la sidebar
    st.sidebar.markdown(
        "<h1 style='text-align: center; padding: 20px 0; border-bottom: 2px solid #FFD700;'>"
        "ü§ó Hugging Face Explorer</h1>", 
        unsafe_allow_html=True
    )

    # Navigation
    st.sidebar.markdown("<div class='sidebar-nav'>", unsafe_allow_html=True)
    
    pages = {
        "üè† Accueil": render_accueil_page,
        "üîç Mod√®les": render_datasets_page,
        "üìä Benchmarks": render_benchmarks_page,
        "üì∞ Actualit√©s": render_actu_page  # Nouvelle page
    }
    
    for page_name in pages:
        if st.sidebar.button(
            page_name,
            key=page_name,
            help=f"Aller √† {page_name}",
            use_container_width=True,
            type="primary" if st.session_state["active_page"] == page_name else "secondary"
        ):
            st.session_state["active_page"] = page_name
    
    st.sidebar.markdown("</div>", unsafe_allow_html=True)

    # Afficher la page active
    pages[st.session_state["active_page"]]()

if __name__ == "__main__":
    st.set_page_config(
        page_title="Hugging Face Explorer - Accueil",
        layout="wide",
        page_icon="ü§ó"
    )
    main()